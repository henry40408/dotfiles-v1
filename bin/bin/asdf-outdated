#!/usr/bin/env ruby

require 'open3'

require_relative 'asdf-lib'

PYTHON_RUBY = ->(version){ version.match?(/^\d/) && %w[dev preview rc].none?{ |s| version.include?(s) } }

FILTERS = {
  flutter: ->(version){ %w[beta pre].none?{ |s| version.include?(s) } },
  helm: ->(version){ %w[rc].none?{ |s| version.include?(s) } },
  golang: ->(version){ %w[beta].none?{ |s| version.include?(s) } },
  kubectl: ->(version){ %w[alpha].none?{ |s| version.include?(s) } },
  python: PYTHON_RUBY,
  ruby: PYTHON_RUBY,
  rust: ->(version){ %w[beta nightly stable].none?{ |s| version.include?(s) } },
  terraform: ->(version){ %w[alpha].none?{ |s| version.include?(s) } },
}

read_tool_versions(first_only: true).each do |(plugin, version)|
  lines = IO.popen("asdf list all #{plugin}").read.lines.map(&:strip)
  
  filter = FILTERS[plugin.to_sym]
  lines = if filter.nil?
    lines
  else
    lines = lines.select{ |line| filter.call(line) }
  end

  latest_version = lines.last
  colorized = if latest_version.nil?
    "no latest version".gray
  elsif latest_version != version
    "#{version} -> #{latest_version}".red
  else
    "up-to-date".green
  end
  puts "#{plugin}: #{colorized}"
end
